import openai
import re

openai.api_key = "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"

user_message_list = []
response_message_list = []
tmp_songs = []
first_response = openai.ChatCompletion.create(
    model="gpt-3.5-turbo",
    messages=[
        {"role": "system",
         "content": "Your name is Spring. And User is your master, but you will take to him/her like a best friend. Make him feel good about him self. You are a song recommendation chat bot. Song format will be: Song_Name - By Song_Artist_Name. Suggest atmost 10 songs"},
    ]
)


def song_extractor(response):
    # Extract song names and serial numbers using regex
    song_pattern = r'\d+\.\s+"([^"]+)"'
    songs = re.findall(song_pattern, response)

    # Print the extracted song names and serial numbers
    for i, song in enumerate(songs, start=1):
        print(f"{i}. {song}")

    # Print other conversation messages
    conversation = response.split('\n\n')
    for message in conversation:
        if message.startswith('1.'):
            break
        print(message.strip())


def chatBot(input_of_user):
    user_message_list.append({'role': 'user', 'content': input_of_user})
    user_query = openai.ChatCompletion.create(
        model="gpt-3.5-turbo",
        messages=user_message_list
    )
    chat_response = user_query['choices'][0]['message']['content']
    response_message_list.append({'role': 'assistant', 'content': chat_response})
    song_extractor(chat_response)

while True:
    user_input = input().lower()
    chatBot(user_input)
    # print(tmp_songs)
